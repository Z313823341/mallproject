<?xml version="1.0" encoding="UTF-8"?><testrun name="TestFreeMarker.test1" project="e3-item-web" tests="1" started="1" failures="0" errors="1" ignored="0">
  <testcase name="test1" classname="cn.e3mall.freemarker.TestFreeMarker" time="0.394">
    <error>FreeMarker template error:&#13;
For "." left-hand operand: Expected a hash, but this has evaluated to a string (wrapper: f.t.SimpleScalar):
==&gt; student  [in template "student.ftl" at line 7, column 14]&#13;
&#13;
----&#13;
FTL stack trace ("~" means nesting-related):&#13;
	- Failed at: ${student.id}  [in template "student.ftl" at line 7, column 12]&#13;
----&#13;
&#13;
Java stack trace (for programmers):&#13;
----&#13;
freemarker.core.NonHashException: [... Exception message was already printed; see it above ...]&#13;
	at freemarker.core.Dot._eval(Dot.java:45)&#13;
	at freemarker.core.Expression.eval(Expression.java:78)&#13;
	at freemarker.core.Expression.evalAndCoerceToString(Expression.java:82)&#13;
	at freemarker.core.DollarVariable.accept(DollarVariable.java:41)&#13;
	at freemarker.core.Environment.visit(Environment.java:324)&#13;
	at freemarker.core.MixedContent.accept(MixedContent.java:54)&#13;
	at freemarker.core.Environment.visit(Environment.java:324)&#13;
	at freemarker.core.Environment.process(Environment.java:302)&#13;
	at freemarker.template.Template.process(Template.java:325)&#13;
	at cn.e3mall.freemarker.TestFreeMarker.test1(TestFreeMarker.java:42)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:606)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)&#13;
&#13;
</error>
  </testcase>
</testrun>
