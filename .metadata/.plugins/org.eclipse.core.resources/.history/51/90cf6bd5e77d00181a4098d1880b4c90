package cn.e3mall.order.service.impl;

import java.util.Date;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;

import cn.e3mall.common.jedis.JedisClient;
import cn.e3mall.mapper.TbOrderItemMapper;
import cn.e3mall.mapper.TbOrderMapper;
import cn.e3mall.mapper.TbOrderShippingMapper;
import cn.e3mall.order.pojo.OrderInfo;
import cn.e3mall.order.service.OrderService;
import cn.e3mall.pojo.TbOrderItem;
import cn.e3mall.pojo.TbOrderShipping;
import cn.e3mall.utils.E3Result;

public class OrderServiceImpl implements OrderService{
	
	@Autowired
	private TbOrderMapper tbOrderMapper;
	@Autowired
	private TbOrderItemMapper tbOrderItemMapper;
	@Autowired
	private TbOrderShippingMapper tbOrderShippingMapper;
	@Autowired
	private JedisClient jedisClient;
	@Value("${ORDER_ID_GEN_KEY}")
	private String ORDER_ID_GEN_KEY;
	@Value("${ORDER_ID_START}")
	private String ORDER_ID_START;
	@Value("${ORDER_DETAIL_ID_GEN_KEY}")
	private String ORDER_DETAIL_ID_GEN_KEY;
	@Value("${ORDER_DETAIL_ID_START}")
	private String ORDER_DETAIL_ID_START;
	
	
	@Override
	public E3Result createOrder(OrderInfo orderInfo) {
		// TODO Auto-generated method stub
		//生成订单号，使用redis的incr生成
		if(!jedisClient.exists(ORDER_ID_GEN_KEY)){
			jedisClient.set(ORDER_ID_GEN_KEY, ORDER_ID_START);
		}
		String orderId = jedisClient.incr(ORDER_ID_GEN_KEY).toString();	
		//补全OrderInfo的属性
		orderInfo.setOrderId(ORDER_ID_GEN_KEY);
		//1.未付款，2已付款，3未发货4，已发货，5交易成功6，交易关闭
		orderInfo.setStatus(1);
		orderInfo.setCreateTime(new Date());
		orderInfo.setUpdateTime(new Date());
		//插入订单表
		tbOrderMapper.insert(orderInfo);
		//插入订单明细表
		List<TbOrderItem> list = orderInfo.getOrderItems();
		for (TbOrderItem tbOrderItem : list) {
			if(!jedisClient.exists(ORDER_DETAIL_ID_GEN_KEY)){
				jedisClient.set(ORDER_DETAIL_ID_GEN_KEY, ORDER_DETAIL_ID_START);
			}
			String tbOrderItemId = jedisClient.incr(ORDER_DETAIL_ID_GEN_KEY).toString();
			tbOrderItem.setId(tbOrderItemId);
			tbOrderItem.setOrderId(orderId);
			tbOrderItemMapper.insert(tbOrderItem);
		}
		//插入订单物流表
		TbOrderShipping orderShipping = orderInfo.getOrderShipping();
		orderShipping.setOrderId(orderId);
		orderShipping.setCreated(new Date());
		orderShipping.setUpdated(new Date());
		tbOrderShippingMapper.insert(orderShipping);
		//返回成功
		return null;
	}

}
